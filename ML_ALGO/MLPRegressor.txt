Best parameters: 
 {'activation': 'relu', 'alpha': 0.01, 'batch_size': 'auto', 'hidden_layer_sizes': (100,), 'max_iter': 500, 'random_state': 420, 'solver': 'lbfgs', 'verbose': True} 

Best score: 
 -378642380.1372953 

Full output: 
 {'mean_fit_time': array([ 139.07064755, 2430.86708581, 2201.4148797 , 2154.86073043,
       2156.0498395 , 2000.03948379,  141.96795533, 2448.6499028 ,
       2201.79616141, 2154.07943263, 2151.01657035, 2027.69545217,
        142.78829854, 2441.32954941, 2205.3374239 , 2160.71388347,
       2157.06815448, 1909.1900522 ]), 'std_fit_time': array([  0.62189405,  41.63347396,  50.15354628,  35.8997965 ,
        48.67228304,  28.29420885,   0.46249763,  30.25032902,
        33.13085318,  27.91386755,  45.07966895,  29.66951923,
         0.69264467,  22.40327743,  35.77719991,  30.32774193,
        37.05089639, 178.64541101]), 'mean_score_time': array([0.02051809, 0.20305016, 0.1875083 , 0.18273065, 0.17978325,
       0.17275922, 0.01658721, 0.20062037, 0.18766367, 0.18835328,
       0.1855516 , 0.1801137 , 0.01577213, 0.19240625, 0.18896761,
       0.18244274, 0.1795053 , 0.152899  ]), 'std_score_time': array([0.00653953, 0.01157853, 0.01098322, 0.0098281 , 0.01941102,
       0.0103713 , 0.0044003 , 0.0083797 , 0.0096125 , 0.01725983,
       0.02342899, 0.01272689, 0.00254761, 0.01532851, 0.00802834,
       0.01139501, 0.00912799, 0.02424455]), 'param_activation': masked_array(data=['relu', 'relu', 'relu', 'relu', 'relu', 'relu', 'relu',
                   'relu', 'relu', 'relu', 'relu', 'relu', 'relu', 'relu',
                   'relu', 'relu', 'relu', 'relu'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_alpha': masked_array(data=[0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.001,
                   0.001, 0.001, 0.001, 0.001, 0.001, 0.01, 0.01, 0.01,
                   0.01, 0.01, 0.01],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_batch_size': masked_array(data=['auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'auto', 'auto', 'auto'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_hidden_layer_sizes': masked_array(data=[(100,), (500, 500), (750, 250), (333, 333, 333),
                   (500, 300, 200), (700, 200, 100), (100,), (500, 500),
                   (750, 250), (333, 333, 333), (500, 300, 200),
                   (700, 200, 100), (100,), (500, 500), (750, 250),
                   (333, 333, 333), (500, 300, 200), (700, 200, 100)],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_max_iter': masked_array(data=[500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
                   500, 500, 500, 500, 500, 500, 500],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_random_state': masked_array(data=[420, 420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
                   420, 420, 420, 420, 420, 420, 420],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_solver': masked_array(data=['lbfgs', 'lbfgs', 'lbfgs', 'lbfgs', 'lbfgs', 'lbfgs',
                   'lbfgs', 'lbfgs', 'lbfgs', 'lbfgs', 'lbfgs', 'lbfgs',
                   'lbfgs', 'lbfgs', 'lbfgs', 'lbfgs', 'lbfgs', 'lbfgs'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_verbose': masked_array(data=[True, True, True, True, True, True, True, True, True,
                   True, True, True, True, True, True, True, True, True],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'params': [{'activation': 'relu', 'alpha': 0.0001, 'batch_size': 'auto', 'hidden_layer_sizes': (100,), 'max_iter': 500, 'random_state': 420, 'solver': 'lbfgs', 'verbose': True}, {'activation': 'relu', 'alpha': 0.0001, 'batch_size': 'auto', 'hidden_layer_sizes': (500, 500), 'max_iter': 500, 'random_state': 420, 'solver': 'lbfgs', 'verbose': True}, {'activation': 'relu', 'alpha': 0.0001, 'batch_size': 'auto', 'hidden_layer_sizes': (750, 250), 'max_iter': 500, 'random_state': 420, 'solver': 'lbfgs', 'verbose': True}, {'activation': 'relu', 'alpha': 0.0001, 'batch_size': 'auto', 'hidden_layer_sizes': (333, 333, 333), 'max_iter': 500, 'random_state': 420, 'solver': 'lbfgs', 'verbose': True}, {'activation': 'relu', 'alpha': 0.0001, 'batch_size': 'auto', 'hidden_layer_sizes': (500, 300, 200), 'max_iter': 500, 'random_state': 420, 'solver': 'lbfgs', 'verbose': True}, {'activation': 'relu', 'alpha': 0.0001, 'batch_size': 'auto', 'hidden_layer_sizes': (700, 200, 100), 'max_iter': 500, 'random_state': 420, 'solver': 'lbfgs', 'verbose': True}, {'activation': 'relu', 'alpha': 0.001, 'batch_size': 'auto', 'hidden_layer_sizes': (100,), 'max_iter': 500, 'random_state': 420, 'solver': 'lbfgs', 'verbose': True}, {'activation': 'relu', 'alpha': 0.001, 'batch_size': 'auto', 'hidden_layer_sizes': (500, 500), 'max_iter': 500, 'random_state': 420, 'solver': 'lbfgs', 'verbose': True}, {'activation': 'relu', 'alpha': 0.001, 'batch_size': 'auto', 'hidden_layer_sizes': (750, 250), 'max_iter': 500, 'random_state': 420, 'solver': 'lbfgs', 'verbose': True}, {'activation': 'relu', 'alpha': 0.001, 'batch_size': 'auto', 'hidden_layer_sizes': (333, 333, 333), 'max_iter': 500, 'random_state': 420, 'solver': 'lbfgs', 'verbose': True}, {'activation': 'relu', 'alpha': 0.001, 'batch_size': 'auto', 'hidden_layer_sizes': (500, 300, 200), 'max_iter': 500, 'random_state': 420, 'solver': 'lbfgs', 'verbose': True}, {'activation': 'relu', 'alpha': 0.001, 'batch_size': 'auto', 'hidden_layer_sizes': (700, 200, 100), 'max_iter': 500, 'random_state': 420, 'solver': 'lbfgs', 'verbose': True}, {'activation': 'relu', 'alpha': 0.01, 'batch_size': 'auto', 'hidden_layer_sizes': (100,), 'max_iter': 500, 'random_state': 420, 'solver': 'lbfgs', 'verbose': True}, {'activation': 'relu', 'alpha': 0.01, 'batch_size': 'auto', 'hidden_layer_sizes': (500, 500), 'max_iter': 500, 'random_state': 420, 'solver': 'lbfgs', 'verbose': True}, {'activation': 'relu', 'alpha': 0.01, 'batch_size': 'auto', 'hidden_layer_sizes': (750, 250), 'max_iter': 500, 'random_state': 420, 'solver': 'lbfgs', 'verbose': True}, {'activation': 'relu', 'alpha': 0.01, 'batch_size': 'auto', 'hidden_layer_sizes': (333, 333, 333), 'max_iter': 500, 'random_state': 420, 'solver': 'lbfgs', 'verbose': True}, {'activation': 'relu', 'alpha': 0.01, 'batch_size': 'auto', 'hidden_layer_sizes': (500, 300, 200), 'max_iter': 500, 'random_state': 420, 'solver': 'lbfgs', 'verbose': True}, {'activation': 'relu', 'alpha': 0.01, 'batch_size': 'auto', 'hidden_layer_sizes': (700, 200, 100), 'max_iter': 500, 'random_state': 420, 'solver': 'lbfgs', 'verbose': True}], 'split0_test_score': array([-3.64150306e+08, -5.16254875e+08, -5.64485088e+08, -6.88775506e+08,
       -6.80180402e+08, -6.11191783e+08, -3.61932856e+08, -6.05321541e+08,
       -5.49172171e+08, -7.78646334e+08, -6.65857931e+08, -7.23430466e+08,
       -3.60987451e+08, -6.33776085e+08, -7.06594130e+08, -6.31747337e+08,
       -7.02269049e+08, -6.66307522e+08]), 'split1_test_score': array([-3.91032763e+08, -4.28631921e+08, -6.79494764e+08, -5.26015384e+08,
       -4.98144114e+08, -5.72726102e+08, -3.94176378e+08, -4.26132892e+08,
       -8.43031390e+08, -4.41664197e+08, -5.83262700e+08, -6.46747228e+08,
       -3.89070369e+08, -4.25362066e+08, -6.62570909e+08, -4.43594804e+08,
       -4.12965646e+08, -6.31571621e+08]), 'split2_test_score': array([-3.49897691e+08, -9.15086176e+08, -7.03580563e+08, -9.54428016e+08,
       -7.42478148e+08, -8.08053364e+08, -3.48800745e+08, -9.36648921e+08,
       -1.01256651e+09, -1.07854426e+09, -7.79653010e+08, -9.23835844e+08,
       -3.53513337e+08, -7.93145787e+08, -7.75358553e+08, -5.65875858e+09,
       -1.07870700e+09, -8.89457424e+08]), 'split3_test_score': array([-5.01208712e+08, -5.60250111e+08, -6.12003952e+08, -1.69385123e+09,
       -9.56910352e+08, -6.59673423e+08, -4.91633568e+08, -5.61057488e+08,
       -6.29469845e+08, -1.85570337e+09, -7.27002272e+08, -6.17867132e+08,
       -4.88948872e+08, -5.83615634e+08, -6.58707776e+08, -1.67718032e+09,
       -8.56474130e+08, -1.04667797e+09]), 'split4_test_score': array([-3.26873522e+08, -4.48230023e+08, -1.04180241e+09, -9.75113110e+08,
       -3.83841746e+08, -8.02806509e+08, -3.28574958e+08, -5.11043657e+08,
       -1.29174463e+09, -9.93958723e+08, -3.96151784e+08, -1.23368143e+09,
       -3.28667272e+08, -9.06434233e+08, -1.08416814e+09, -2.53267979e+09,
       -5.06677378e+08, -7.31639379e+08]), 'split5_test_score': array([-4.15518582e+08, -6.00169012e+08, -5.35723818e+08, -7.35743282e+08,
       -9.24450588e+08, -4.67801393e+08, -4.15054737e+08, -6.60941831e+08,
       -5.45994126e+08, -5.00075331e+08, -1.16030231e+09, -4.64276893e+08,
       -4.17891423e+08, -7.19844665e+08, -5.17544154e+08, -1.14674713e+09,
       -6.83955640e+08, -6.30726712e+08]), 'split6_test_score': array([-3.29885560e+08, -4.41176915e+08, -5.63520930e+08, -5.15327470e+08,
       -9.00630180e+08, -5.28351962e+08, -3.35472198e+08, -5.78457342e+08,
       -5.51623946e+08, -5.81809014e+08, -8.24036087e+08, -4.34510136e+08,
       -3.35958282e+08, -4.79088186e+08, -5.60710123e+08, -4.61358530e+08,
       -5.21343121e+08, -4.40946174e+08]), 'split7_test_score': array([-3.42587609e+08, -5.43380817e+08, -4.08106465e+08, -4.22057963e+08,
       -9.25357870e+08, -3.78074673e+08, -3.40981943e+08, -5.22659848e+08,
       -4.48620110e+08, -3.88110692e+08, -1.69760314e+09, -4.32550866e+08,
       -3.41027882e+08, -1.04860234e+09, -4.17129547e+08, -4.48188440e+08,
       -9.24153501e+08, -4.22794858e+08]), 'split8_test_score': array([-3.53489106e+08, -1.25532572e+09, -8.39085712e+08, -2.17325581e+09,
       -5.48361132e+08, -9.04927871e+08, -3.53659281e+08, -1.20154071e+09,
       -3.48343502e+09, -1.73667324e+09, -5.07959940e+08, -8.99482570e+08,
       -3.54841277e+08, -1.09543529e+09, -1.75317251e+09, -1.79715783e+09,
       -4.87015312e+08, -1.06542559e+09]), 'split9_test_score': array([-4.21017133e+08, -6.41225933e+08, -6.28194311e+08, -1.49803111e+09,
       -7.66772429e+08, -7.34790667e+08, -4.16302307e+08, -6.17879209e+08,
       -9.69005748e+08, -4.72889106e+09, -7.83929709e+08, -7.72997176e+08,
       -4.15517635e+08, -5.85637412e+08, -7.85351027e+08, -1.39520722e+09,
       -7.81211132e+08, -7.83200721e+08]), 'mean_test_score': array([-3.79566098e+08, -6.34973150e+08, -6.57599802e+08, -1.01825989e+09,
       -7.32712696e+08, -6.46839775e+08, -3.78658897e+08, -6.62168343e+08,
       -1.03246635e+09, -1.30840762e+09, -8.12575888e+08, -7.14937974e+08,
       -3.78642380e+08, -7.27094170e+08, -7.92130686e+08, -1.61926200e+09,
       -6.95477190e+08, -7.30874797e+08]), 'std_test_score': array([5.13313959e+07, 2.46500394e+08, 1.67543407e+08, 5.53681661e+08,
       1.91590809e+08, 1.58087751e+08, 4.83063633e+07, 2.20613165e+08,
       8.55540883e+08, 1.24074778e+09, 3.54098320e+08, 2.41974946e+08,
       4.73502786e+07, 2.18511903e+08, 3.63414024e+08, 1.50099531e+09,
       2.05388488e+08, 2.10374538e+08]), 'rank_test_score': array([ 3,  4,  6, 15, 12,  5,  2,  7, 16, 17, 14,  9,  1, 10, 13, 18,  8,
       11])}